name: Build And Test

on:
  push:
    branches: [ Assignment* ]
  pull_request:
    branches: [ Assignment* ]

jobs:
  build:
    defaults:
      run:
        working-directory: ./SecretSanta/
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Get Directory
      run: pwd

    - name: Run Npm Build
      working-directory: ./SecretSanta/src/SecretSanta.Web/
      run: |
        npm install
        npm run build:prod
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Web
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: dotnet publish API
      run: dotnet publish ./SecretSanta/src/SecretSanta.Api/SecretSanta.Api.csproj -c Release -o ${{env.DOTNET_ROOT}}/API

    - name: dotnet publish Web
      run: dotnet publish ./SecretSanta/src/SecretSanta.Web/SecretSanta.Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/Web



    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: .net-app_API
        path: ${{env.DOTNET_ROOT}}/API

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: .net-app_Web
        path: ${{env.DOTNET_ROOT}}/Web

    - name: Display Directory Structure
      run: ls -R
      
    - name: Verify Build Badge
      working-directory: ./
      shell: pwsh
      run: |
        [bool]$buildBadgeExists=$false
        Get-Item ./README.md | Get-Content | Where-Object { $_ -like "*AssignmentBuild.yml/badge.svg*"} | Foreach-Object { $buildBadgeExists = $true; break }
        if(-not $buildBadgeExists) {
          throw "Build Badge does not exist in README.md"
        }
